package game;
import java.util.*;
public class Player {
private static String[][] map;
private String[][] unseen;
private static Ship[][] player;
private static Ship[][] computer;
private Ship cru1,cru2;
private Ship des1;
private Ship air;
public Player() {
	map = new String[10][10];
	unseen = new String[10][10];
	for(int i = 0; i < unseen.length; i++) {
		for(int j = 0; j < unseen[0].length; j++) {
			unseen[i][j] = "unknown";
		}
	}
	player = new Ship[10][10];
}
public void getcomputer() {
	computer = Computer.pass();
}
public void setcru1() {
	Scanner input = new Scanner(System.in);
	Scanner inputstring = new Scanner(System.in);
	System.out.println("WHich row to put cru1?");
	int row = input.nextInt();
	System.out.println("Which col to put cru1?");
	int col = input.nextInt();
	if(row<0 || row>=10 || col<0 || col>=10) {
		System.out.println("out of bound");
		setcru1();
	} else {
	System.out.println("the direction to put cru1? left?right?up?down?");
	String direction = inputstring.nextLine();
	if(direction.equals("left")) {
		if(col-2>=0 && player[row][col]==null&&player[row][col-1]==null&&player[row][col-2]==null) {
			Cruiser c1 = new Cruiser("cruiser1",3);
			cru1=c1;
			player[row][col] = c1;
			player[row][col-1]=c1;
			player[row][col-2]=c1;
		} else {
			System.out.println("wrong direction with out of bound");
			setcru1();
		}
	}
	else if(direction.equals("up")) {
		if(row-2>=0 && player[row][col]==null&&player[row-1][col]==null&&player[row-2][col]==null) {
			Cruiser c1 = new Cruiser("cruiser1",3);
			cru1=c1;
			player[row][col]=c1;
			player[row-1][col]=c1;
			player[row-2][col]=c1;
		} else {
			System.out.println("wrong direction with out of bound");
			setcru1();
		}
	}
	else if(direction.equals("right")) {
		if(col+2<=9 && player[row][col]==null&&player[row][col+1]==null&&player[row][col+2]==null) {
			Cruiser c1 = new Cruiser("cruiser1",3);
			cru1=c1;
			player[row][col]=c1;
			player[row][col+1]=c1;
			player[row][col+2]=c1;
		} else {
			System.out.println("wrong direction with out of bound");
			setcru1();
		}
	}
	else if(direction.equals("down")) {
		if(row+2<=9 && player[row][col]==null&&player[row+1][col]==null&&player[row+2][col]==null) {
			Cruiser c1 = new Cruiser("cruiser1",3);
			cru1=c1;
			player[row][col]=c1;
			player[row+1][col]=c1;
			player[row+2][col]=c1;
		} else {
			System.out.println("wrong direction with out of bound");
			setcru1();
		}
	}
	else {
		System.out.println("wrrong direction");
		setcru1();
	}
}
}
public void setcru2() {
	Scanner input = new Scanner(System.in);
	Scanner inputstring = new Scanner(System.in);
	System.out.println("WHich row to put cru2?");
	int row = input.nextInt();
	System.out.println("Which col to put cru2?");
	int col = input.nextInt();
	if(row<0 || row>=10 || col<0 || col>=10) {
		System.out.println("out of bound");
		setcru2();
	} else {
	System.out.println("the direction to put cru2? left?right?up?down?");
	String direction = inputstring.nextLine();
	if(direction.equals("left")) {
		if(col-2>=0 && player[row][col]==null&&player[row][col-1]==null&&player[row][col-2]==null) {
			Cruiser c2 = new Cruiser("cruiser2",3);
			player[row][col] = c2;
			player[row][col-1]=c2;
			player[row][col-2]=c2;
		} else {
			System.out.println("wrong direction with out of bound");
			setcru2();
		}
	}
	else if(direction.equals("up")) {
		if(row-2>=0 &&player[row][col]==null&&player[row-1][col]==null&&player[row-2][col]==null) {
			Cruiser c2 = new Cruiser("cruiser2",3);
			player[row][col]=c2;
			player[row-1][col]=c2;
			player[row-2][col]=c2;
		} else {
			System.out.println("wrong direction with out of bound");
			setcru2();
		}
	}
	else if(direction.equals("right")) {
		if(col+2<=9 && player[row][col]==null&&player[row][col+1]==null&&player[row][col+2]==null) {
			Cruiser c2 = new Cruiser("cruiser2",3);
			player[row][col]=c2;
			player[row][col+1]=c2;
			player[row][col+2]=c2;
		} else {
			System.out.println("wrong direction with out of bound");
			setcru2();
		}
	}
	else if(direction.equals("down")) {
		if(row+2<=9 && player[row][col]==null&&player[row+1][col]==null&&player[row+2][col]==null) {
			Cruiser c2 = new Cruiser("cruiser2",3);
			player[row][col]=c2;
			player[row+1][col]=c2;
			player[row+2][col]=c2;
		} else {
			System.out.println("wrong direction with out of bound");
			setcru2();
		}
	}
	else {
		System.out.println("wrrong direction");
		setcru2();
	}
}	
}
public void setcru3() {
	Scanner input = new Scanner(System.in);
	Scanner inputstring = new Scanner(System.in);
	System.out.println("WHich row to put cru3?");
	int row = input.nextInt();
	System.out.println("Which col to put cru3?");
	int col = input.nextInt();
	if(row<0 || row>=10 || col<0 || col>=10) {
		System.out.println("out of bound");
		setcru3();
	} else {
	System.out.println("the direction to put cru2? left?right?up?down?");
	String direction = inputstring.nextLine();
	if(direction.equals("left")) {
		if(col-2>=0 && player[row][col]==null&&player[row][col-1]==null&&player[row][col-2]==null) {
			Cruiser c3 = new Cruiser("cruiser3",3);
			player[row][col] = c3;
			player[row][col-1]=c3;
			player[row][col-2]=c3;
		} else {
			System.out.println("wrong direction with out of bound");
			setcru3();
		}
	}
	else if(direction.equals("up")) {
		if(row-2>=0 && player[row][col]==null&&player[row-1][col]==null&&player[row-2][col]==null) {
			Cruiser c3 = new Cruiser("cruiser3",3);
			player[row][col]=c3;
			player[row-1][col]=c3;
			player[row-2][col]=c3;
		} else {
			System.out.println("wrong direction with out of bound");
			setcru3();
		}
	}
	else if(direction.equals("right")) {
		if(col+2<=9 && player[row][col]==null&&player[row][col+1]==null&&player[row][col+2]==null) {
			Cruiser c3 = new Cruiser("cruiser3",3);
			player[row][col]=c3;
			player[row][col+1]=c3;
			player[row][col+2]=c3;
		} else {
			System.out.println("wrong direction with out of bound");
			setcru3();
		}
	}
	else if(direction.equals("down")) {
		if(row+2<=9 && player[row][col]==null&&player[row+1][col]==null&&player[row+2][col]==null) {
			Cruiser c3 = new Cruiser("cruiser3",3);
			player[row][col]=c3;
			player[row+1][col]=c3;
			player[row+2][col]=c3;
		} else {
			System.out.println("wrong direction with out of bound");
			setcru3();
		}
	}
	else {
		System.out.println("wrrong direction");
		setcru3();
	}
}
}
public void setdes1() {
	Scanner input = new Scanner(System.in);
	Scanner inputstring = new Scanner(System.in);
	System.out.println("Which row to put des1?");
	int row = input.nextInt();
	System.out.println("Which col to put des1?");
	int col = input.nextInt();
	if(row<0 || row>=10 || col<0 ||col>=10) {
		System.out.println("out of bound");
		setdes1();
	} else {
	System.out.println("Which ditection to put des1?left?up?right?down?");
	String direction = inputstring.nextLine();
	if(direction.equals("left")) {
		if(col-3>=0 && player[row][col]==null&&player[row][col-1]==null&&player[row][col-2]==null &&player[row][col-3]==null) {
			Destroyer d1 = new Destroyer("destroyer1",4);
			des1=d1;
			player[row][col]=d1;
			player[row][col-1]=d1;
			player[row][col-2]=d1;
			player[row][col-3]=d1;
		} else {
			System.out.println("wrong direction out of bound");
			setdes1();
		}
	}
	else if(direction.equals("up")) {
		if(row-3>=0 && player[row][col]==null&&player[row-1][col]==null&&player[row-2][col]==null &&player[row-3][col]==null) {
			Destroyer d1 = new Destroyer("destroyer1",4);
			des1=d1;
			player[row][col]=d1;
			player[row-1][col]=d1;
			player[row-2][col]=d1;
			player[row-3][col]=d1;
		} else {
			System.out.println("wrong direction out of bound");
			setdes1();
		}
	}
	else if(direction.equals("right")) {
		if(col+3<10 && player[row][col]==null&&player[row][col+1]==null&&player[row][col+2]==null &&player[row][col+3]==null) {
			Destroyer d1 = new Destroyer("destroyer1",4);
			des1=d1;
			player[row][col]=d1;
			player[row][col+1]=d1;
			player[row][col+2]=d1;
			player[row][col+3]=d1;
		} else {
			System.out.println("wrong direction out of bound");
			setdes1();
		}
	}
	else if(direction.equals("down")) {
		if(row+3<10 && player[row][col]==null&&player[row+1][col]==null&&player[row+2][col]==null &&player[row+3][col]==null) {
			Destroyer d1 = new Destroyer("destroyer1",4);
			des1=d1;
			player[row][col]=d1;
			player[row+1][col]=d1;
			player[row+2][col]=d1;
			player[row+3][col]=d1;
		} else {
			System.out.println("wrong direction out of bound");
			setdes1();
		}
	}
	else {
		System.out.println("Wrong direction");
		setdes1();
	}
}
}
public void setdes2() {
	Scanner input = new Scanner(System.in);
	Scanner inputstring = new Scanner(System.in);
	System.out.println("Which row to put des2?");
	int row = input.nextInt();
	System.out.println("Which col to put des2?");
	int col = input.nextInt();
	if(row<0 || row>=10 || col<0 ||col>=10) {
		System.out.println("out of bound");
		setdes2();
	}else {
	System.out.println("Which ditection to put des2?left?up?right?down?");
	String direction = inputstring.nextLine();
	if(direction.equals("left")) {
		if(col-3>=0 && player[row][col]==null&&player[row][col-1]==null&&player[row][col-2]==null &&player[row][col-3]==null) {
			Destroyer d2 = new Destroyer("destroyer2",4);
			player[row][col]=d2;
			player[row][col-1]=d2;
			player[row][col-2]=d2;
			player[row][col-3]=d2;
		} else {
			System.out.println("wrong direction out of bound");
			setdes2();
		}
	}
	else if(direction.equals("up")) {
		if(row-3>=0 && player[row][col]==null&&player[row-1][col]==null&&player[row-2][col]==null &&player[row-3][col]==null) {
			Destroyer d2 = new Destroyer("destroyer2",4);
			player[row][col]=d2;
			player[row-1][col]=d2;
			player[row-2][col]=d2;
			player[row-3][col]=d2;
		} else {
			System.out.println("wrong direction out of bound");
			setdes2();
		}
	}
	else if(direction.equals("right")) {
		if(col+3<10 && player[row][col]==null&&player[row][col+1]==null&&player[row][col+2]==null &&player[row][col+3]==null) {
			Destroyer d2 = new Destroyer("destroyer2",4);
			player[row][col]=d2;
			player[row][col+1]=d2;
			player[row][col+2]=d2;
			player[row][col+3]=d2;
		} else {
			System.out.println("wrong direction out of bound");
			setdes2();
		}
	}
	else if(direction.equals("down")) {
		if(row+3<10 && player[row][col]==null&&player[row+1][col]==null&&player[row+2][col]==null &&player[row+3][col]==null) {
			Destroyer d2 = new Destroyer("destroyer2",4);
			player[row][col]=d2;
			player[row+1][col]=d2;
			player[row+2][col]=d2;
			player[row+3][col]=d2;
		} else {
			System.out.println("wrong direction out of bound");
			setdes2();
		}
	}
	else {
		System.out.println("Wrong direction");
		setdes1();
	}
	}	
}
public void setair() {
	Scanner input = new Scanner(System.in);
	Scanner inputstring = new Scanner(System.in);
	System.out.println("Which row to put the air?");
	int row = input.nextInt();
	System.out.println("Which col to put the air?");
	int col = input.nextInt();
	if(row<0 || row>=10 || col<0 || col>=10) {
		System.out.println("out of bound");
		setair();
	} else {
		System.out.println("Which direction to put if?left?up?right?down?");
		String direction = inputstring.nextLine();
		if(direction.equals("left")) {
			if(col-4>=0 && player[row][col]==null&&player[row][col-1]==null&&player[row][col-2]==null&&player[row][col-3]==null&&player[row][col-4]==null) {
				Aircraft a1 = new Aircraft("aircraft",5);
				air=a1;
				player[row][col]=a1;
				player[row][col-1]=a1;
				player[row][col-2]=a1;
				player[row][col-3]=a1;
				player[row][col-4]=a1;
			} else {
				System.out.println("wrong direction out of bound or already put");
				setair();
			}
		}
		else if(direction.equals("up")) {
			if(row-4>=0 && player[row][col]==null&&player[row-1][col]==null&&player[row-2][col]==null&&player[row-3][col]==null&&player[row-4][col]==null) {
				Aircraft a1 = new Aircraft("aircraft",5);
				air=a1;
				player[row][col]=a1;
				player[row-1][col]=a1;
				player[row-2][col]=a1;
				player[row-3][col]=a1;
				player[row-4][col]=a1;
			} else {
				System.out.println("wrong direction out of bound or already put");
				setair();
			}
		}
		else if(direction.equals("right")) {
			if(col+4<10 && player[row][col]==null&&player[row][col+1]==null&&player[row][col+2]==null&&player[row][col+3]==null&&player[row][col+4]==null) {
				Aircraft a1 = new Aircraft("aircraft",5);
				air=a1;
				player[row][col]=a1;
				player[row][col+1]=a1;
				player[row][col+2]=a1;
				player[row][col+3]=a1;
				player[row][col+4]=a1;
			} else {
				System.out.println("wrong direction out of bound or already put");
				setair();
			}
		}
		else if(direction.equals("down")) {
			if(row+4<10 && player[row][col]==null&&player[row+1][col]==null&&player[row+2][col]==null&&player[row+3][col]==null&&player[row+4][col]==null) {
				Aircraft a1 = new Aircraft("aircraft",5);
				air=a1;
				player[row][col]=a1;
				player[row+1][col]=a1;
				player[row+2][col]=a1;
				player[row+3][col]=a1;
				player[row+4][col]=a1;
			} else {
				System.out.println("wrong direction out of bound or already put");
				setair();
			}
		}
		else {
			System.out.println("Wrong direction");
			setair();
		}
	}

}
public void print() {
	for(int i = 0; i < player.length; i++) {
		for(int j = 0; j < player[0].length; j++) {
			if(player[i][j]!=null) {
				if(player[i][j].getship()=="destroyer1" || player[i][j].getship()=="destroyer2") {
					System.out.print(player[i][j].getship()+" ");
				} else {
				System.out.print(player[i][j].getship()+"   ");
				}
			} else {
				System.out.print("null" + "    ");
			}
		}
		System.out.println();
	}
}
public static Ship[][] pass() {
	return player;
}
public void attack() {
	print1();
	Scanner input = new Scanner(System.in);
	System.out.println("Which row to attack?");
	int row = input.nextInt();
	System.out.println("which col to attack?");
	int col = input.nextInt();
	if(computer[row][col]==null) {
		unseen[row][col]="empty  ";
		print1();
		System.out.println("hit nothing");
	} else {
		if(computer[row][col].getship().substring(0,7).equals("cruiser")) {
			unseen[row][col]="cru    ";
			computer[row][col].hit();
			print1();
			System.out.println("hit cruiser");
		} else if(computer[row][col].getship().substring(0,9).equals("destroyer")) {
			unseen[row][col]="des    ";
			computer[row][col].hit();
			print1();
			System.out.println("hit desroyer");
		} else {
			unseen[row][col]="air    ";
			computer[row][col].hit();
			System.out.println("hit aircraft");
			print1();
		}
	}
}
public void print1() {
	for(int i = 0; i < 10; i++) {
		for(int j = 0; j < 10; j++) {
			System.out.print(unseen[i][j]+ " ");
		}
		System.out.println();
	}
}
public boolean playersink() {//true is sink all
	boolean flag_cru1=false;
	boolean flag_cru2=false;
	boolean flag_cru3=false;
	boolean flag_des1=false;
	boolean flag_des2=false;
	boolean flag_air=false;
	for(int i = 0; i < player.length; i++) {
		for(int j = 0 ; j < player[0].length; j++) {
			if(player[i][j]!=null) {
				if(player[i][j].getship().equals("cruiser1") && player[i][j].checkremain()==0) {
					flag_cru1=true;
				}
				if(player[i][j].getship().equals("cruiser2") && player[i][j].checkremain()==0) {
					flag_cru2=true;
				}
				if(player[i][j].getship().equals("cruiser3") && player[i][j].checkremain()==0) {
					flag_cru3=true;
				}
				if(player[i][j].getship().equals("destroyer1")&&player[i][j].checkremain()==0) {
					flag_des1=true;
				}
				if(player[i][j].getship().equals("destroyer2")&&player[i][j].checkremain()==0) {
					flag_des2=true;
				}
				if(player[i][j].getship().equals("aircraft")&&player[i][j].checkremain()==0) {
					flag_air=true;;
				}
			}
		}
	}
	return flag_cru1==true&&flag_cru2==true&&flag_cru3==true&&flag_des1==true&&flag_des2==true&&flag_air==true;

}
public void get() {
	for(int i = 0;i<10;i++) {
		for(int j = 0; j < 10; j++) {
			if(player[i][j]!=null) {
				System.out.print(player[i][j].checkremain()+" ");
			} else {
				System.out.print("-1"+" ");
			}
		}
		System.out.println();
	}
}
public int[][] checkcom(){
	int[][] r = new int[10][10];
	for(int i=0;i<10;i++) {
		for(int j=0;j<10;j++) {
			if(computer[i][j]!=null) {
				r[i][j]=computer[i][j].checkremain();
			} else {
				r[i][j]=-1;
			}
		}
	}
	return r;
}
public boolean checkcomsink() {
	int[][] r=checkcom();
	int count=0;
	for(int i =0; i<10;i++) {
		for(int j = 0; j <10;j++) {
			if(r[i][j]==0) {
				count++;
			}
		}
	}
	return count==12;
}
public void att(int a, int b) {
	if(computer[a][b]!=null) {
		computer[a][b].hit();
	}
}
public boolean checkplayer() {
	return cru1.checkremain()==0 && des1.checkremain()==0 && air.checkremain()==0;
}
}
